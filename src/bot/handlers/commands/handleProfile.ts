import { UserLimits } from "@prisma/client";
import { HandlerArgs } from "../../../types/HandlerArgs";
import prisma from "../../../prisma/index.js";

export const handleProfile = async (args: HandlerArgs) => {
  const { bot, message, user } = args;

  const referals = (
    await prisma.referrals.aggregate({
      where: {
        chat_id: user.chat_id,
      },
      _count: {
        id: true,
      },
    })
  )._count.id;

  const userSubscription = await prisma.userSubscriptions.findFirst({
    where: {
      chat_id: user.chat_id,
    },
    include: {
      Subscriptions: true,
    },
  });

  const currentModel = await prisma.models.findFirst({
    where: {
      id: user.model_id as number,
    },
  });

  const userLimits = await prisma.userLimits.findMany({
    include: {
      Models: {
        include: {
          ReferralBonuses: true,
        },
      },
    },
    where: {
      chat_id: user.chat_id,
      limit: {
        gt: 0,
      },
    },
  });
  let tommorowDate = new Date();
  tommorowDate.setDate(tommorowDate.getDate() + 1);

  //@ts-ignore
  const limitsText = userLimits.map((item: UserLimits) => `üü¢${item.Models?.name}: ${item.requests}/${item.limit}`).join("\n");
  const messageText =
    `–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞: ${userSubscription?.Subscriptions?.name}` +
    `\n–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: ${userSubscription?.dateEnd!.toLocaleDateString()}` +
    `\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${referals}` +
    `\n–¶–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏: ${userSubscription?.Subscriptions?.price}—Ä` +
    `\n–¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å ${currentModel?.name}` +
    `\n–û—Å—Ç–∞–ª–æ—Å—å :\n${limitsText}` +
    `\n–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ : ${tommorowDate.toLocaleDateString()}`;

  await bot.sendMessage(message.chat.id, messageText);
};
